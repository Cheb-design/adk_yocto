setenv bootargs ''

setenv initrd_high 0xffffffff

a_base=0x10000000

setexpr a_script  ${a_base} + 0x00800000
setexpr a_zImage  ${a_base} + 0x00800000
setexpr a_fdt     ${a_base} + 0x03000000
setexpr a_ramdisk ${a_base} + 0x03800000
setexpr a_initrd  ${a_base} + 0x03a00000
setexpr a_reset_cause_marker ${a_base} + 0x80
setexpr a_reset_cause	     ${a_base} + 0x84

if itest.s "x" == "x${board}" ; then
	echo "!!!! Error: Your u-boot is outdated. Please upgrade.";
	exit;
fi

if  itest.s x6DL == "x${cpu}" ; then
		dtbname=imx6dl-emx_stand.dtb;
	elif itest.s x6QP == "x${cpu}" ; then
		dtbname=imx6qp-emx_stand.dtb;
	else
		dtbname=imx6qds-emx_stand.dtb
fi

if itest.s x${bootpart} == x ; then
	bootpart=1
fi

setenv bootargs ${bootargs} console=${console},115200 vmalloc=400M consoleblank=0 rootwait fixrtc cpu=${cpu} board=${board}

if itest.s x == x${bootdir} ; then
	bootdir=/
fi

if load ${dtype} ${disk}:${bootpart} ${a_fdt} ${bootdir}${dtbname} ; then
	fdt addr ${a_fdt}
	setenv fdt_high 0xffffffff
else
	echo "!!!! Error loading ${bootdir}${dtbname}";
	exit;
fi


cmd_xxx_present=
fdt resize

bpart=2

if test "sata" = "${dtype}" ; then
	setenv bootargs "${bootargs} root=/dev/sda${bpart}" ;
elif test "usb" = "${dtype}" ; then
	setenv bootargs "${bootargs} root=/dev/sda${bpart}" ;
else
	setenv bootargs "${bootargs} root=/dev/mmcblk${disk}p${bpart}"
fi

if itest.s "x" != "x${disable_msi}" ; then
	setenv bootargs ${bootargs} pci=nomsi
fi;

if itest.s "x" != "x${disable_giga}" ; then
	setenv bootargs ${bootargs} fec.disable_giga=1
fi

if itest.s "x" != "x${gpumem}" ; then
	setenv bootargs ${bootargs} galcore.contiguousSize=${gpumem}
fi

if itest.s "x" != "x${cma}" ; then
	setenv bootargs ${bootargs} cma=${cma}
fi

if itest.s "x" != "x${loglevel}" ; then
	setenv bootargs ${bootargs} loglevel=${loglevel}
fi


if itest.s "x" != "x${show_fdt}" ; then
	fdt print /
fi


if load ${dtype} ${disk}:${bootpart} ${a_zImage} /zImage ; then
	bootz ${a_zImage} - ${a_fdt}
fi
echo "Error loading kernel image"
