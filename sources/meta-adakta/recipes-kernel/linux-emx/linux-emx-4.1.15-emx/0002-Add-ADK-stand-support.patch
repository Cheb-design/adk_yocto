From 563ad9cb161757b036f5a96827458f85ad0ec549 Mon Sep 17 00:00:00 2001
From: Ilya Gorchakov <ilya.gorchakov@adakta.ru>
Date: Wed, 15 Nov 2017 18:46:18 +0300
Subject: [PATCH 2/3] Add ADK stand support

---
 arch/arm/boot/dts/Makefile                      |   5 +-
 arch/arm/boot/dts/imx6dl-adk_stand.dts          |  35 ++
 arch/arm/boot/dts/imx6qdl-adakta_adk_stand.dtsi | 547 ++++++++++++++++++++++++
 arch/arm/boot/dts/imx6qds-adk_stand.dts         |  45 ++
 arch/arm/boot/dts/imx6qp-adk_stand.dts          |  64 +++
 drivers/video/fbdev/mxc/mxc_edid.c              |   6 +
 drivers/video/fbdev/mxc/mxc_hdmi.c              |  11 +-
 7 files changed, 709 insertions(+), 4 deletions(-)
 create mode 100644 arch/arm/boot/dts/imx6dl-adk_stand.dts
 create mode 100644 arch/arm/boot/dts/imx6qdl-adakta_adk_stand.dtsi
 create mode 100644 arch/arm/boot/dts/imx6qds-adk_stand.dts
 create mode 100644 arch/arm/boot/dts/imx6qp-adk_stand.dts

diff --git a/arch/arm/boot/dts/Makefile b/arch/arm/boot/dts/Makefile
index 4a7104e..f3e9f17 100644
--- a/arch/arm/boot/dts/Makefile
+++ b/arch/arm/boot/dts/Makefile
@@ -379,7 +379,10 @@ dtb-$(CONFIG_SOC_IMX6Q) += \
 	imx6q-wandboard-revb1.dtb \
 	imx6qds-adk.dtb \
 	imx6qp-adk.dtb \
-	imx6dl-adk.dtb
+	imx6dl-adk.dtb \
+	imx6qds-adk_stand.dtb \
+	imx6qp-adk_stand.dtb \
+	imx6dl-adk_stand.dtb
 dtb-$(CONFIG_SOC_IMX6SL) += \
 	imx6sl-evk.dtb \
 	imx6sl-evk-btwifi.dtb \
diff --git a/arch/arm/boot/dts/imx6dl-adk_stand.dts b/arch/arm/boot/dts/imx6dl-adk_stand.dts
new file mode 100644
index 0000000..8e09a78
--- /dev/null
+++ b/arch/arm/boot/dts/imx6dl-adk_stand.dts
@@ -0,0 +1,35 @@
+/* 
+ * Copyright 2017 Adakta, Inc.
+ * Copyright 2013 Boundary Devices, Inc.
+ * Copyright 2012 Freescale Semiconductor, Inc.
+ * Copyright 2011 Linaro Ltd.
+ *
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+
+/dts-v1/;
+
+#include <dt-bindings/interrupt-controller/irq.h>
+#include "imx6dl.dtsi"
+#include "imx6qdl-adakta_adk_stand.dtsi"
+
+/ {
+	model = "Freescale i.MX6 DualLite ADAKTA Board";
+	compatible = "fsl,imx6dl-adk", "fsl,imx6dl";
+};
+
+
+&hdmi_core {
+	ipu_id = <0>;
+};
+
+
+
+&pxp {
+	status = "okay";
+};
diff --git a/arch/arm/boot/dts/imx6qdl-adakta_adk_stand.dtsi b/arch/arm/boot/dts/imx6qdl-adakta_adk_stand.dtsi
new file mode 100644
index 0000000..a666316
--- /dev/null
+++ b/arch/arm/boot/dts/imx6qdl-adakta_adk_stand.dtsi
@@ -0,0 +1,547 @@
+/* 
+ * Copyright 2017 Adakta, Inc.
+ * Copyright 2013-2016 Boundary Devices, Inc.
+ * Copyright 2011-2015 Freescale Semiconductor, Inc.
+ * Copyright 2011 Linaro Ltd.
+ *
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/input/input.h>
+
+&iomuxc {
+	pinctrl-names = "default";
+
+    pinctrl-0 = <&pinctrl_hog>;
+	iomuxc_imx6q_adakta_adk: iomuxc-imx6q-adakta_adkgrp {
+		status = "okay";
+	};
+};
+
+&iomuxc_imx6q_adakta_adk {
+
+    pinctrl_hog: hoggrp {
+		fsl,pins = <
+			MX6QDL_PAD_KEY_COL4__GPIO4_IO14		0x1b0b0		/* USB_OTG_OC */
+			MX6QDL_PAD_EIM_D30__GPIO3_IO30		0x1b0b0		/* USB_H1_OC */
+
+			MX6QDL_PAD_KEY_COL0__GPIO4_IO06		0x1b0b0		/* UART4_TX */
+			MX6QDL_PAD_KEY_ROW0__GPIO4_IO07		0x1b0b0		/* UART4_RX */
+            MX6QDL_PAD_KEY_ROW2__GPIO4_IO11		0x1b0b0		/* CAN1_RXD */
+			MX6QDL_PAD_KEY_COL2__GPIO4_IO10		0x1b0b0		/* CAN1_TXD */
+
+			MX6QDL_PAD_GPIO_16__GPIO7_IO11		0x1b0b0		/* I2C3_SDA */
+			MX6QDL_PAD_GPIO_5__GPIO1_IO05		0x1b0b0		/* I2C3_SCL */
+			MX6QDL_PAD_EIM_D28__GPIO3_IO28		0x1b0b0		/* I2C1_SDA */
+			MX6QDL_PAD_EIM_D21__GPIO3_IO21		0x1b0b0		/* I2C1_SCL */
+
+			MX6QDL_PAD_GPIO_0__GPIO1_IO00		0x1b0b0		/* SAI1.MCLK */
+			MX6QDL_PAD_SD2_DAT3__GPIO1_IO12		0x1b0b0		/* SAI1.BCLK */
+			
+			MX6QDL_PAD_SD2_DAT2__GPIO1_IO13		0x1b0b0		/* SAI1.TX_DATA */
+			MX6QDL_PAD_SD2_DAT1__GPIO1_IO14		0x1b0b0		/* SAI1.SYNC */
+			MX6QDL_PAD_SD2_DAT0__GPIO1_IO15		0x1b0b0		/* SAI1.RX.DATA */
+
+		>;
+	};
+
+	pinctrl_enet: enetgrp {
+		fsl,pins = <
+			MX6QDL_PAD_ENET_MDIO__ENET_MDIO		0x1b0b0
+			MX6QDL_PAD_ENET_MDC__ENET_MDC		0x1b0b0
+			MX6QDL_PAD_RGMII_TXC__RGMII_TXC		0x100b0
+			MX6QDL_PAD_RGMII_TD0__RGMII_TD0		0x100b0
+			MX6QDL_PAD_RGMII_TD1__RGMII_TD1		0x100b0
+			MX6QDL_PAD_RGMII_TD2__RGMII_TD2		0x100b0
+			MX6QDL_PAD_RGMII_TD3__RGMII_TD3		0x100b0
+			MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL	0x100b0
+			MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK	0x100b0
+			MX6QDL_PAD_RGMII_RXC__RGMII_RXC		0x1b0b0
+			MX6QDL_PAD_RGMII_RD0__RGMII_RD0		0x1b0b0
+			MX6QDL_PAD_RGMII_RD1__RGMII_RD1		0x1b0b0
+			MX6QDL_PAD_RGMII_RD2__RGMII_RD2		0x1b0b0
+			MX6QDL_PAD_RGMII_RD3__RGMII_RD3		0x1b0b0
+			MX6QDL_PAD_RGMII_RX_CTL__RGMII_RX_CTL	0x1b0b0
+#define GP_ENET_PHY_RESET	<&gpio3 23 GPIO_ACTIVE_LOW>
+			MX6QDL_PAD_EIM_D23__GPIO3_IO23	0x030b0
+#define GPIRQ_ENET_PHY		<&gpio1 28 IRQ_TYPE_LEVEL_LOW>
+			MX6QDL_PAD_ENET_TX_EN__GPIO1_IO28	0x1b0b0
+		>;
+	};
+
+    //Mipi camera/HDMI
+	pinctrl_i2c2: i2c2grp {
+		fsl,pins = <
+			MX6QDL_PAD_KEY_COL3__I2C2_SCL		0x4001b8b1
+			MX6QDL_PAD_KEY_ROW3__I2C2_SDA		0x4001b8b1
+		>;
+	};
+
+	pinctrl_pcie: pciegrp {
+		fsl,pins = <
+#define GP_PCIE_RESET	<&gpio7 12 GPIO_ACTIVE_LOW>
+			MX6QDL_PAD_GPIO_17__GPIO7_IO12		0x0b0b0
+		>;
+	};
+
+	//Mipi camera
+	pinctrl_i2c2_ov5640_mipi: i2c2-ov5640-mipigrp {
+		fsl,pins = <
+#define GP_OV5640_MIPI_POWER_DOWN	<&gpio6 9 GPIO_ACTIVE_HIGH>
+			MX6QDL_PAD_NANDF_WP_B__GPIO6_IO09	0x0b0b0
+#define GP_OV5640_MIPI_RESET		<&gpio2 5 GPIO_ACTIVE_LOW>
+			MX6QDL_PAD_NANDF_D5__GPIO2_IO05		0x000b0
+		>;
+	};
+
+	//Camera clock
+	pinctrl_pwm3: pwm3grp {
+		fsl,pins = <
+			MX6QDL_PAD_SD1_DAT1__PWM3_OUT		0x1b0b1
+		>;
+	};
+
+    //Lvds bl
+	pinctrl_pwm4: pwm4grp {
+		fsl,pins = <
+			MX6QDL_PAD_SD1_CMD__PWM4_OUT		0x1b0b1
+		>;
+	};
+
+    //Console
+	pinctrl_uart2: uart2grp {
+		fsl,pins = <
+			MX6QDL_PAD_EIM_D26__UART2_TX_DATA	0x1b0b1
+			MX6QDL_PAD_EIM_D27__UART2_RX_DATA	0x1b0b1
+		>;
+	};
+
+    //UART for stand iface 
+	pinctrl_uart3: uart3grp {
+		fsl,pins = <
+			MX6QDL_PAD_EIM_D24__UART3_TX_DATA	0x1b0b1
+			MX6QDL_PAD_EIM_D25__UART3_RX_DATA	0x1b0b1
+		>;
+	};
+
+	//Usb ID only
+	pinctrl_usbotg: usbotggrp {
+		fsl,pins = <
+			MX6QDL_PAD_GPIO_1__USB_OTG_ID		0x17059
+		>;
+	};
+
+    //uSD card
+    pinctrl_usdhc3: usdhc3grp {
+		fsl,pins = <
+			MX6QDL_PAD_SD3_CMD__SD3_CMD		0x17059
+			MX6QDL_PAD_SD3_CLK__SD3_CLK		0x10059
+			MX6QDL_PAD_SD3_DAT0__SD3_DATA0		0x17059
+			MX6QDL_PAD_SD3_DAT1__SD3_DATA1		0x17059
+			MX6QDL_PAD_SD3_DAT2__SD3_DATA2		0x17059
+			MX6QDL_PAD_SD3_DAT3__SD3_DATA3		0x17059
+#define GP_USDHC3_CD	<&gpio7 0 GPIO_ACTIVE_LOW>
+			MX6QDL_PAD_SD3_DAT5__GPIO7_IO00		0x1b0b0
+		>;
+	};
+
+	//emmc
+	pinctrl_usdhc4: usdhc4grp {
+		fsl,pins = <
+			MX6QDL_PAD_SD4_CMD__SD4_CMD		0x17071
+			MX6QDL_PAD_SD4_CLK__SD4_CLK		0x10071
+			MX6QDL_PAD_SD4_DAT0__SD4_DATA0		0x17071
+			MX6QDL_PAD_SD4_DAT1__SD4_DATA1		0x17071
+			MX6QDL_PAD_SD4_DAT2__SD4_DATA2		0x17071
+			MX6QDL_PAD_SD4_DAT3__SD4_DATA3		0x17071
+			MX6QDL_PAD_SD4_DAT4__SD4_DATA4		0x17071
+			MX6QDL_PAD_SD4_DAT5__SD4_DATA5		0x17071
+			MX6QDL_PAD_SD4_DAT6__SD4_DATA6		0x17071
+			MX6QDL_PAD_SD4_DAT7__SD4_DATA7		0x17071
+		>;
+	};
+
+};
+
+/ {
+	aliases {
+		backlight_lvds = &backlight_lvds;
+		fb_hdmi = &fb_hdmi;
+		fb_lvds = &fb_lvds;
+		fb_lvds2 = &fb_lvds2;
+		ldb = &ldb;
+		mmc0 = &usdhc3;
+		mmc1 = &usdhc4;
+		mxcfb0 = &fb_lvds;
+		mxcfb1 = &fb_lvds2;
+		mxcfb2 = &fb_hdmi;
+		pwm_lvds = &pwm4;
+		//t_lvds = &t_lvds;
+	};
+
+	backlight_lvds: backlight_lvds {
+		brightness-levels = <0 1 2 3 4 5 6 7 8 9 10>;
+		compatible = "pwm-backlight";
+		default-brightness-level = <8>;
+		display = <&fb_lvds>;
+		power-supply = <&reg_3p3v>;
+		pwms = <&pwm4 0 5000000>;
+		status = "okay";
+	};
+
+	chosen {
+		stdout-path = &uart2;
+	};
+
+	clocks {
+		clk24m: clk24m {
+			compatible = "fixed-clock";
+			#clock-cells = <0>;
+			clock-frequency = <24000000>;
+		};
+	};
+
+	fb_lvds: fb@0 {
+		compatible = "fsl,mxc_sdc_fb";
+		disp_dev = "ldb";
+		interface_pix_fmt = "RGB666";
+		default_bpp = <16>;
+		int_clk = <0>;
+		late_init = <0>;
+		status = "okay";
+	};
+
+	fb_lvds2: fb@1 {
+		compatible = "fsl,mxc_sdc_fb";
+		disp_dev = "ldb";
+		interface_pix_fmt = "RGB666";
+		default_bpp = <16>;
+		int_clk = <0>;
+		late_init = <0>;
+		status = "okay";
+	};
+
+	fb_hdmi: fb@2 {
+		compatible = "fsl,mxc_sdc_fb";
+		disp_dev = "hdmi";
+		interface_pix_fmt = "RGB24";
+		mode_str ="1024x600M@60";
+		default_bpp = <32>;
+		int_clk = <0>;
+		late_init = <0>;
+		status = "okay";
+	};
+
+	memory {
+		reg = <0x10000000 0x40000000>;
+	};
+
+	mipi_mclk: mipi_mclk {
+		compatible = "pwm-clock";
+		#clock-cells = <0>;
+		clock-frequency = <22000000>;
+		clock-output-names = "mipi_mclk";
+		pwms = <&pwm3 0 45>; /* 1 / 45 ns = 22 MHz */
+	};
+
+	regulators {
+		compatible = "simple-bus";
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		reg_1p8v: regulator@0 {
+			compatible = "regulator-fixed";
+			reg = <0>;
+			regulator-name = "1P8V";
+			regulator-min-microvolt = <1800000>;
+			regulator-max-microvolt = <1800000>;
+			regulator-always-on;
+		};
+
+		reg_2p5v: regulator@1 {
+			compatible = "regulator-fixed";
+			reg = <1>;
+			regulator-name = "2P5V";
+			regulator-min-microvolt = <2500000>;
+			regulator-max-microvolt = <2500000>;
+			regulator-always-on;
+		};
+
+		reg_3p3v: regulator@2 {
+			compatible = "regulator-fixed";
+			reg = <2>;
+			regulator-name = "3P3V";
+			regulator-min-microvolt = <3300000>;
+			regulator-max-microvolt = <3300000>;
+			regulator-always-on;
+		};
+
+		reg_usbotg_vbus: regulator@3 {
+			compatible = "regulator-fixed";
+			reg = <3>;
+			regulator-name = "usb_otg_vbus";
+			regulator-min-microvolt = <5000000>;
+			regulator-max-microvolt = <5000000>;
+			enable-active-high;
+		};
+
+	};
+
+	sound-hdmi {
+		compatible = "fsl,imx6q-audio-hdmi",
+			     "fsl,imx-audio-hdmi";
+		model = "imx-audio-hdmi";
+		hdmi-controller = <&hdmi_audio>;
+	};
+
+	v4l2_cap_0: v4l2_cap_0 {
+		compatible = "fsl,imx6q-v4l2-capture";
+		ipu_id = <0>;
+		csi_id = <0>;
+		mclk_source = <0>;
+		status = "okay";
+	};
+
+	v4l2_cap_1: v4l2_cap_1 {
+		compatible = "fsl,imx6q-v4l2-capture";
+		ipu_id = <0>;
+		csi_id = <1>;
+		mipi_camera = <1>;
+		mclk_source = <0>;
+		status = "okay";
+	};
+
+	v4l2_cap_2: v4l2_cap_2 {
+		compatible = "fsl,imx6q-v4l2-capture";
+		ipu_id = <0>;
+		csi_id = <1>;
+		mclk_source = <0>;
+		status = "okay";
+	};
+
+	v4l2_cap_3: v4l2_cap_3 {
+		compatible = "fsl,imx6q-v4l2-capture";
+		ipu_id = <0>;
+		csi_id = <0>;
+		mipi_camera = <1>;
+		mclk_source = <0>;
+		status = "okay";
+	};
+
+	v4l2_out {
+		compatible = "fsl,mxc_v4l2_output";
+		status = "okay";
+	};
+};
+
+&fec {
+	phy-handle = <&ethphy>;
+	phy-mode = "rgmii";
+	phy-reset-gpios = GP_ENET_PHY_RESET;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_enet>;
+	rxc-skew-ps = <3000>;
+	rxd0-skew-ps = <0>;
+	rxd1-skew-ps = <0>;
+	rxd2-skew-ps = <0>;
+	rxd3-skew-ps = <0>;
+	rxdv-skew-ps = <0>;
+	txc-skew-ps = <3000>;
+	txd0-skew-ps = <0>;
+	txd1-skew-ps = <0>;
+	txd2-skew-ps = <0>;
+	txd3-skew-ps = <0>;
+	txen-skew-ps = <0>;
+	status = "okay";
+
+	mdio {
+		#address-cells = <0>;
+		#size-cells = <1>;
+
+		ethphy: ethernet-phy {
+			interrupts-extended = GPIRQ_ENET_PHY;
+		};
+	};
+};
+
+&hdmi_audio {
+	status = "okay";
+};
+
+&hdmi_core {
+	ipu_id = <0>;
+	disp_id = <0>;
+	status = "okay";
+};
+
+&hdmi_video {
+	fsl,phy_reg_vlev = <0x0294>;
+	fsl,phy_reg_cksymtx = <0x800d>;
+	status = "okay";
+	/*
+	*override_edid = [
+ 00 FF FF FF FF FF FF 00 1D 36 66 06 01 00 00 00
+ 02 1B 01 03 80 10 0A 78 2B 38 55 A6 56 24 12 48
+ 9A 50 54 00 00 00 01 00 01 00 01 00 01 00 01 00
+ 01 00 01 00 01 00 00 14 00 40 41 58 22 20 04 0D
+ 13 00 9A 5A 00 00 00 10 00 00 00 10 00 00 00 00
+ 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00
+ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10
+ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 14 ];*/
+};
+
+&i2c2 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c2>;
+	status = "okay";
+
+	hdmi: edid@50 {
+		compatible = "fsl,imx6-hdmi-i2c";
+		reg = <0x50>;
+	};
+
+	ov5640_mipi: ov5640_mipi@3e {
+		compatible = "ovti,ov5640_mipi";
+		reg = <0x3e>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_i2c2_ov5640_mipi>;
+		clocks = <&mipi_mclk>;
+		clock-names = "csi_mclk";
+		DOVDD-supply = <&reg_1p8v>;
+		AVDD-supply = <&reg_2p5v>;
+		DVDD-supply = <&reg_1p8v>;
+		pwn-gpios = GP_OV5640_MIPI_POWER_DOWN;
+		rst-gpios = GP_OV5640_MIPI_RESET;
+		ipu_id = <0>;
+		csi_id = <1>;
+		mclk = <22000000>;
+		mclk_source = <0>;
+	};
+};
+
+&ldb {
+	status = "okay";
+    dual-mode;
+	lvds-channel@0 {
+		crtc = "ipu1-di0";
+		fsl,data-mapping = "spwg";
+		fsl,data-width = <18>;
+		status = "okay";
+		//primary;
+		display-timings {
+	    	okaya1024x600: okaya7x0WP {
+				clock-frequency = <65000000>;
+				hactive = <1024>;
+				vactive = <600>;
+				hback-porch = <220>;
+				hfront-porch = <40>;
+				vback-porch = <7>;
+				vfront-porch = <21>;
+				hsync-len = <60>;
+				vsync-len = <10>;
+			};
+		};
+		
+	};
+
+
+	lvds-channel@1 {
+		crtc = "ipu1-di0";
+		fsl,data-mapping = "spwg";
+		fsl,data-width = <18>;
+		status = "okay";
+		display-timings {
+	    	okaya1024x600_2: okaya7x0WP {
+				clock-frequency = <65000000>;
+				hactive = <1024>;
+				vactive = <600>;
+				hback-porch = <220>;
+				hfront-porch = <40>;
+				vback-porch = <7>;
+				vfront-porch = <21>;
+				hsync-len = <60>;
+				vsync-len = <10>;
+			};
+		};
+	};
+	
+
+};
+
+&mipi_csi {
+	lanes = <2>;
+	status = "okay";
+};
+
+&pcie {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_pcie>;
+	reset-gpio = GP_PCIE_RESET;
+	status = "okay";
+};
+
+
+&pwm3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_pwm3>;
+	status = "okay";
+};
+
+&pwm4 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_pwm4>;
+	status = "okay";
+};
+
+
+
+&uart2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart2>;
+	status = "okay";
+};
+
+&uart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart3>;
+	status = "okay";
+};
+
+
+&usbh1 {
+	disable-over-current;
+	status = "okay";
+};
+
+&usbotg {
+	vbus-supply = <&reg_usbotg_vbus>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usbotg>;
+	disable-over-current;
+	status = "okay";
+};
+
+&usdhc3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc3>;
+	cd-gpios = GP_USDHC3_CD;
+	vmmc-supply = <&reg_3p3v>;
+	status = "okay";
+};
+
+&usdhc4 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc4>;
+	bus-width = <8>;
+	non-removable;
+	cap-power-off-card;
+	keep-power-in-suspend;
+	vmmc-supply = <&reg_3p3v>;
+	status = "okay";
+};
diff --git a/arch/arm/boot/dts/imx6qds-adk_stand.dts b/arch/arm/boot/dts/imx6qds-adk_stand.dts
new file mode 100644
index 0000000..9aff857
--- /dev/null
+++ b/arch/arm/boot/dts/imx6qds-adk_stand.dts
@@ -0,0 +1,45 @@
+/*
+ * Copyright 2017 Adakta, Inc.
+ * Copyright 2013-2016 Boundary Devices, Inc.
+ * Copyright 2012 Freescale Semiconductor, Inc.
+ * Copyright 2011 Linaro Ltd.
+ *
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+
+/dts-v1/;
+
+#include <dt-bindings/interrupt-controller/irq.h>
+#include "imx6q.dtsi"
+#include "imx6qdl-adakta_adk_stand.dtsi"
+
+/ {
+	model = "Freescale i.MX6 Quad/Dual/Solo ADAKTA Stand Board";
+	compatible = "fsl,imx6qds-adk", "fsl,imx6q";
+};
+
+
+&hdmi_core {
+	ipu_id = <1>;
+};
+
+&ov5640_mipi {
+	ipu_id = <1>;
+	csi_id = <0>;
+};
+
+&sata {
+	status = "okay";
+};
+
+/* ov5640_mipi */
+&v4l2_cap_1 {
+	ipu_id = <1>;
+	csi_id = <0>;
+	mipi_camera = <1>;
+};
diff --git a/arch/arm/boot/dts/imx6qp-adk_stand.dts b/arch/arm/boot/dts/imx6qp-adk_stand.dts
new file mode 100644
index 0000000..510f905
--- /dev/null
+++ b/arch/arm/boot/dts/imx6qp-adk_stand.dts
@@ -0,0 +1,64 @@
+/* 
+ * Copyright 2017 Adakta, Inc.
+ * Copyright 2013 Boundary Devices
+ * Copyright 2012 Freescale Semiconductor, Inc.
+ * Copyright 2011 Linaro Ltd.
+ *
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+
+/dts-v1/;
+
+#include "imx6q.dtsi"
+#include "imx6qp.dtsi"
+#include "imx6qdl-adakta_adk_stand.dtsi"
+
+/ {
+	model = "Freescale i.MX6 Quad Plus ADAKTA Board";
+	compatible = "fsl,imx6qp-adk", "fsl,imx6q";
+
+	memory: memory {
+		reg = <0x10000000 0x80000000>;
+	};
+};
+
+
+&sata {
+	status = "okay";
+};
+
+&v4l2_cap_2 {
+	ipu_id = <1>;
+};
+
+&pre1 {
+	status = "okay";
+};
+
+&pre2 {
+	status = "okay";
+};
+
+&pre3 {
+	status = "okay";
+};
+
+&pre4 {
+	status = "okay";
+};
+
+&prg1 {
+	memory-region = <&memory>;
+	status = "okay";
+};
+
+&prg2 {
+	memory-region = <&memory>;
+	status = "okay";
+};
+
diff --git a/drivers/video/fbdev/mxc/mxc_edid.c b/drivers/video/fbdev/mxc/mxc_edid.c
index 8313ac8..478f5c2 100644
--- a/drivers/video/fbdev/mxc/mxc_edid.c
+++ b/drivers/video/fbdev/mxc/mxc_edid.c
@@ -180,6 +180,12 @@ const struct fb_videomode mxc_cea_mode[64] = {
 		FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
 		FB_VMODE_NONINTERLACED | FB_VMODE_ASPECT_16_9, 0
 	},
+		/* #41: 1280x720p@100Hz 16:9 */
+	[48] = {
+		NULL, 60, 1024, 600, 18518, 136, 24, 39, 5, 128, 5,
+		0,
+		FB_VMODE_NONINTERLACED | FB_VMODE_ASPECT_16_9, 0
+	},
 };
 
 /*
diff --git a/drivers/video/fbdev/mxc/mxc_hdmi.c b/drivers/video/fbdev/mxc/mxc_hdmi.c
index 491270a..458609a 100644
--- a/drivers/video/fbdev/mxc/mxc_hdmi.c
+++ b/drivers/video/fbdev/mxc/mxc_hdmi.c
@@ -1866,8 +1866,9 @@ static void mxc_hdmi_edid_rebuild_modelist(struct mxc_hdmi *hdmi)
 
 	console_lock();
 
-	fb_destroy_modelist(&hdmi->fbi->modelist);
-	fb_add_videomode(&vga_mode, &hdmi->fbi->modelist);
+	//fb_destroy_modelist(&hdmi->fbi->modelist);
+	//printk("GIV:force add 1024x600 mode!!!\n");
+	//fb_add_videomode(&vga_mode, &hdmi->fbi->modelist);
 
 	for (i = 0; i < hdmi->fbi->monspecs.modedb_len; i++) {
 		/*
@@ -1889,6 +1890,7 @@ static void mxc_hdmi_edid_rebuild_modelist(struct mxc_hdmi *hdmi)
 				hdmi->fbi->monspecs.modedb[i].vmode,
 				hdmi->fbi->monspecs.modedb[i].flag);
 
+			//printk("GIV:force add 1024x600 mode!!!\n");
 			fb_add_videomode(mode, &hdmi->fbi->modelist);
 		}
 	}
@@ -1921,6 +1923,7 @@ static void  mxc_hdmi_default_modelist(struct mxc_hdmi *hdmi)
 	/*Add all no interlaced CEA mode to default modelist */
 	for (i = 0; i < ARRAY_SIZE(mxc_cea_mode); i++) {
 		mode = &mxc_cea_mode[i];
+		//printk("GIV:force add 1024x600 mode!!!\n");
 		if (!(mode->vmode & FB_VMODE_INTERLACED) && (mode->xres != 0))
 			fb_add_videomode(mode, &hdmi->fbi->modelist);
 	}
@@ -2540,6 +2543,7 @@ static int mxc_hdmi_disp_init(struct mxc_dispdrv_handle *disp,
 	int irq = platform_get_irq(hdmi->pdev, 0);
 	int edid_status = HDMI_EDID_FAIL;
 
+    printk("GIV:mxc_hdmi_disp_init!!!\n");
 	dev_dbg(&hdmi->pdev->dev, "%s\n", __func__);
 
 	/* Check hdmi disp init once */
@@ -2665,8 +2669,9 @@ static int mxc_hdmi_disp_init(struct mxc_dispdrv_handle *disp,
 		/*Add all no interlaced CEA mode to default modelist */
 		for (i = 0; i < ARRAY_SIZE(mxc_cea_mode); i++) {
 			mode = &mxc_cea_mode[i];
+			printk("GIV:Edid not read, force add 1024x600 mode!!!\n");
 			if (!(mode->vmode & FB_VMODE_INTERLACED) && (mode->xres != 0))
-				fb_add_videomode(mode, &hdmi->fbi->modelist);
+				fb_add_videomode(&mxc_cea_mode[48], &hdmi->fbi->modelist);
 		}
 
 		console_unlock();
-- 
1.9.1

